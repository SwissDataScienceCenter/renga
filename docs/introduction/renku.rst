.. _renku:

Renku
-----

The `renku` part of the Renku Project is a commandline interface (CLI) for annotating
datasets and wrapping workflows with metadata for aiding iterative development and
building a lineage of results. You can use this CLI from within an interactive environment
launched from Renkulab or locally by installing the library onto your machine.

`renku` aims to be "git for data science" by applying version control to executed
code tied together with the input files that were dependencies and the output files
that result.

Renku can be decomposed into to the following pieces that are exposed to the user.

.. _git:
git
~~~

* when a renku command is run, a commit is created with the files that were added or changed during the command execution
* this commit also includes some hidden .renku metadata that holds the dataset metadata or describes the workflow
* the commit message contains the command you executed, so you can check `git log` to see what you did in the past (running a workflow, creating a dataset, initializing a project)

git-LFS (or other external storage)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* when you add data with `renku dataset` or call `renku run` to generate output data, metadata is added that flags this data to, upon push, enter the git LFS object store in renkulab's gitlab
* if you (or someone else) then clone the project from renkulab's gitlab (or launch an interactive environment from renkulab), you can decide to skip pulling the LFS data to save time/space

Datasets
~~~~~~~~

* import & publish datasets from/to places like Zenodo and Dataverse that have DOIs
* auto-populate metadata for imported datasets (and created datasets based on their origins)
* user-annotation of datasets with schema.org metadata

Lineage of results
~~~~~~~~~~~~~~~~~~

* tracking lineage for a workflow (generate a graph that shows input, execution, and output nodes)
* simplified iterative workflow development (keep making changes to the code/data until you get the output you want)
* compare outputs generated by the same (maybe stoachastic) workflow: `renku rerun`
* ...check out the `CLI documentation`_ for more!

Installing
~~~~~~~~~~

You can follow these `installation instructions`_ for running renku locally if you wish to
forego using renkulab or need to interact with your project locally.

.. _`installation instructions`: https://renku-python.readthedocs.io/en/latest/#installation

.. _`CLI documentation`: https://renku-python.readthedocs.io
