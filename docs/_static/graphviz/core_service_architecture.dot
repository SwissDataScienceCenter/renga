strict digraph architecture {
  compound=true;
  newrank=true;

  graph [fontname="Raleway", nodesep="0.8"];
  node [shape="rect", style="filled,rounded", fontname="Raleway"];
  edge [fontname="Raleway"]

  Service [fillcolor="lightblue"]
  "Filesystem Cache" [fillcolor="#f4d142"]
  "Memory Cache" [fillcolor="#f4d142"]
  GitLab [fillcolor=""]
  Worker [fillcolor="lightblue"]

  subgraph service_clients {
    label="Clients"
    UI -> Service
    SDK -> Service
    {rank=same; UI, SDK};

  }

  Service -> "Filesystem Cache" [label=" persist resource"]
  Service -> "Memory Cache" [label=" persist resource metadata"]
  Service -> GitLab [label=" sync with remote"]

  "Filesystem Cache" -> Worker [label=" execute operation on cached resource"]
  "Memory Cache" -> Worker [label=" read/write resource metadata"]

  Worker -> GitLab [label=" sync with remote"]

  subgraph cluster_service_cache {
    color="lightgray";
    label="Service Cache";
    "Filesystem Cache" [fillcolor="#f4d142"]
    "Memory Cache" [fillcolor="#f4d142"]
  }

  subgraph cluster_service_client {
      color="lightgray";
      label="Clients";
      UI
      SDK
    }

}
