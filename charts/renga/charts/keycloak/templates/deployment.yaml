---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "keycloak.fullname" . }}
  labels:
    app: {{ template "keycloak.name" . }}
    chart: {{ template "keycloak.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "keycloak.name" . }}
      release: "{{ .Release.Name }}"
  template:
    metadata:
    {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
    {{- end }}
      labels:
        app: {{ template "keycloak.name" . }}
        release: "{{ .Release.Name }}"
    spec:
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      containers:
      - name: {{ template "keycloak.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: KEYCLOAK_USER
          value: {{ .Values.username }}
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "keycloak.fullname" . }}
              key: keycloak-password
        - name: POSTGRES_DATABASE
          value: {{ .Values.global.keycloak.postgresDatabase }}
        - name: POSTGRES_USER
          value: {{ .Values.global.keycloak.postgresUser }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "keycloak.fullname" . }}
              key: postgres-password
        - name: POSTGRES_PORT_5432_TCP_ADDR
          value: {{ template "postgresql.fullname" . }}
        - name: PROXY_ADDRESS_FORWARDING
          value: 'true'
        {{- range $key, $value := .Values.env }}
        - name: "{{ $key }}"
          value: "{{ $value }}"
        {{- end }}
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /auth/
            port: http
          initialDelaySeconds: 120
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /auth/
            port: http
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
{{ toYaml .Values.resources | indent 10 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: 60
