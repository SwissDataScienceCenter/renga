name: Deploy and Test

on:
  push:
    branches: ['master']
    paths:
    - helm-chart/**
    - scripts/**
    - acceptance-tests/**
    - .github/**
  workflow_dispatch:


jobs:
  deploy:
    runs-on: ubuntu-20.04
    environment:
      name: dev
      url: https://dev.renku.ch
    steps:
    - uses: actions/checkout@v2
    - name: deploy renku
      uses: ./actions/deploy-renku
      env:
        DOCKER_PASSWORD: ${{ secrets.RENKU_DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.RENKU_DOCKER_USERNAME }}
        KUBECONFIG: "${{ github.workspace }}/renkubot-kube.config"
        RENKU_RELEASE: renku
        RENKU_VALUES_FILE: "${{ github.workspace }}/values.yaml"
        RENKU_VALUES: ${{ secrets.CD_VALUES }}
        RENKUBOT_KUBECONFIG: ${{ secrets.RENKUBOT_DEV_KUBECONFIG }}
        RENKU_BOT_DEV_PASSWORD: ${{ secrets.RENKU_BOT_DEV_PASSWORD }}
        RENKU_ANONYMOUS_SESSIONS: true
        RENKU_TESTS_ENABLED: true
        TEST_ARTIFACTS_PATH: "tests-artifacts-${{ github.sha }}"
        renku: "@master"
    - name: Notify slack
      if: success()
      env:
        RENKU_SLACK_BOT_TOKEN: ${{ secrets.RENKU_SLACK_BOT_TOKEN }}
      run: |
        curl -X POST https://slack.com/api/chat.postMessage \
             -H "Authorization: Bearer $RENKU_SLACK_BOT_TOKEN" \
             --data "channel=C9U45DL1H" \
             --data "text=https://dev.renku.ch has been updated! :tada:"
  test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - uses: actions/checkout@v2
    - name: Test
      env:
        KUBECONFIG: ${{ github.workspace }}/renkubot-kube.config
        RENKUBOT_KUBECONFIG: ${{ secrets.RENKUBOT_DEV_KUBECONFIG }}
      run: |
        echo "$RENKUBOT_KUBECONFIG" > renkubot-kube.config
        helm test renku --namespace renku --timeout 40m --logs
    - name: Download artifact for packaging on failure
      if: failure()
      uses: ./actions/download-test-artifacts
      env:
        RENKU_VALUES: ${{ secrets.CI_RENKU_VALUES }}
        TEST_ARTIFACTS_PATH: "tests-artifacts-${{ github.sha }}"
    - name: Upload screenshots on failure
      if: failure()
      uses: actions/upload-artifact@v1
      with:
        name: acceptance-test-artifacts
        path: ${{ github.workspace }}/test-artifacts/
    - name: Notify slack
      if: failure()
      env:
        RENKU_SLACK_BOT_TOKEN: ${{ secrets.RENKU_SLACK_BOT_TOKEN }}
      run: |
        curl -X POST https://slack.com/api/chat.postMessage \
             -H "Authorization: Bearer $RENKU_SLACK_BOT_TOKEN" \
             --data "channel=C9U45DL1H" \
             --data "text=Acceptance tests on https://dev.renku.ch failed! :scream_cat:"
  chart:
    needs: test
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Configure build
        run: |
          python -m pip install --upgrade pip pipenv
          pipenv install --deploy --system --dev
          git config --global user.name renku-bot
          git config --global user.email renku@datascience.ch
      - name: update and test chart
        env:
          HELM_URL: https://charts.helm.sh/stable
          HELM_TGZ: helm-v2.16.1-linux-amd64.tar.gz
          TEMP_DIR: ${{ runner.temp }}
        run: |
          PATH=${{ runner.temp }}/linux-amd64/:$PATH
          scripts/install-helm.sh
          helm dep update helm-chart/renku
          helm dep update helm-chart/gitlab
      - name: Push helm chart and images
        if: github.ref == 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.RENKU_CI_TOKEN }}
          DOCKER_BUILDKIT: "1"
        run: |
          chartpress --push --publish-chart
          chartpress --push --tag latest
      - name: Push tagged helm chart and images
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.RENKU_CI_TOKEN }}
        run: |
          chartpress --push --publish-chart --tag $(echo ${GITHUB_REF} | cut -d'/' -f 3)
