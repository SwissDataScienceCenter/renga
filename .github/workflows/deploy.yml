name: Deploy Renku

on:
  push:
    # paths:
    # - charts/**
    branches: ['add-deploy-action']
    tags: ['*']

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
    - uses: rokroskar/workflow-run-cleanup-action@v0.2.1
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  github-env:
    runs-on: ubuntu-latest
    steps:
    - name: get environment
      run: env
  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Deploy master to dev
  #     uses: stefanprodan/kube-tools@v1
  #     env:
  #       KUBECONFIG: ${{ github.workspace }}/renkubot-kube.config
  #       RENKUBOT_KUBECONFIG: ${{ secrets.RENKUBOT_KUBECONFIG }}
  #       CD_VALUES: ${{ secrets.CD_VALUES }}
  #     with:
  #       kubectl: 1.16.2
  #       helm: 2.16.1
  #       command: |
  #         set -x
  #         echo "$RENKUBOT_KUBECONFIG" > renkubot-kube.config
  #         helm init --client-only
  #         helm repo add renku https://swissdatasciencecenter.github.io/helm-charts/
  #         helm repo add gitlab https://charts.gitlab.io/
  #         helm repo add jupyterhub https://jupyterhub.github.io/helm-chart
  #         rm -rf charts/renku/charts
  #         helm dependency update charts/renku
  #         printf "%s" "$CD_VALUES" > cd_values.yaml
  #         helm upgrade --install renku \
  #                     --namespace renku \
  #                     -f cd_values.yaml \
  #                     --timeout 1800 charts/renku \
  #                     --cleanup-on-fail
  # test:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Test the PR
  #     env:
  #       RENKU_BOT_DEV_PASSWORD: ${{ secrets.RENKU_BOT_DEV_PASSWORD }}
  #     run: |
  #       cd tests
  #       docker-compose run -e RENKU_TEST_URL=https://dev.renku.ch \
  #                          -e RENKU_TEST_FULL_NAME="Renku Bot" \
  #                          -e RENKU_TEST_EMAIL="renku@datascience.ch" \
  #                          -e RENKU_TEST_USERNAME="renku-test" \
  #                          -e RENKU_TEST_PASSWORD="$RENKU_BOT_DEV_PASSWORD" sbt
  #   - name: Upload screenshots on failure
  #     if: failure()
  #     uses: actions/upload-artifact@v1
  #     with:
  #       name: test-artifacts
  #       path: tests/target
  chart:
    # needs: test
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/add-deploy-action'"
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Configure build
        run: |
          python -m pip install --upgrade pip pipenv
          pipenv install --deploy --system --dev
          git config --global user.name renku-bot
          git config --global user.email renku@datascience.ch
      - name: update and test chart
        env:
          HELM_URL: https://storage.googleapis.com/kubernetes-helm
          HELM_TGZ: helm-v2.14.3-linux-amd64.tar.gz
          TEMP_DIR: ${{ runner.temp }}
        run: |
          PATH=${{ runner.temp }}/linux-amd64/:$PATH
          scripts/install-helm.sh
          helm dep update charts/renku
          helm dep update charts/gitlab
          # helm lint charts/renku
      - name: Push helm chart and images
        # if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.RENKU_CI_TOKEN }}
        run: |
          cd charts
          chartpress --push --publish-chart
          chartpress --push --tag latest
      - name: Push tagged helm chart and images
        if: contains(github.ref, 'tags')
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        run: |
          cd charts
          chartpress --push --publish-chart --tag $(echo ${GITHUB_REF} | cut -d'/' -f 3)
