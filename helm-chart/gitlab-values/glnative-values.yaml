#
# Basic configuration file for Renku 0.7.1
#

---
domain_configurations:
  mainURL:                   &mainURL                       glnative.dev.renku.ch
  baseURL:                   &baseURL                       https://glnative.dev.renku.ch
  jupyterhubURL:             &jupyterhubURL                 https://glnative.dev.renku.ch/jupyterhub
  gatewayURL:                &gatewayURL                    https://glnative.dev.renku.ch/api
  jupyterhubAuthCallbackUrl: &jupyterhub_gitlab_callbackUrl https://glnative.dev.renku.ch/jupyterhub/hub/oauth_callback
  oauth_redirect_uri:        &oauth_redirect_uri            https://glnative.dev.renku.ch/api/auth/jupyterhub/token
  ingressTLS:                &ingressTLS                    glnative-dev-renku-ch-tls

  gitlabURL:                 &gitlabURL                     https://gitlab.glnative.dev.renku.ch
  gitlabPrefix:              &gitlabPrefix                  /           ## /gitlab if part of Renku, / otherwise
  gitlabClientId:            &gitlabClientId                c0e46f604ad1797a5da29b40410207a9352b1b979f95878e7f767f2943efdb5b
  gitlabClientSecret:        &gitlabClientSecret            19d27c7e768b149b496b52c6beabcc46e96f8ee2eceaea1539ea5c293993bb80

  hubGitlabClientId:         &hubGitlabClientId             c0e46f604ad1797a5da29b40410207a9352b1b979f95878e7f767f2943efdb5b
  hubGitlabClientSecret:     &hubGitlabClientSecret         19d27c7e768b149b496b52c6beabcc46e96f8ee2eceaea1539ea5c293993bb80

  registryName:              &registryName                  registry.glnative.dev.renku.ch
  ## registryURL:               &registryURL                   https://registry.gitlab.glnative.dev.renku.ch
  ## registry_tls:              &registry_tls                  registry-gitlab-glnative-dev-renku-ch-tls

## Global variables
## Shared values/secrets
global:
  gitlab:
    ## Secret of the gitlab client app in keycloak. Only needed if gitlab is deployed as part of Renku
    ## and thus relies on keycloak for authentication. To change this value after deploying, first
    ## generate a new secret using the Keycloak admin console then paste the generated secret here and redeploy.
    ##     clientSecret: # use `uuidgen -r`
    clientSecret:  22d60579-6bd6-44a0-9316-78a9fac0a6c9        ## Taken from gitlab client in keycloak
    ## URL prefix for gitlab
    urlPrefix: *gitlabPrefix

  keycloak:
    ## Postgres password for the Keycloak database
    postgresPassword:
      value:  7713a061621c76ea2c7a607cce34a6327310f2e27e01bc09cdcfd9e807554ab6        ## openssl rand -hex 32
    ## Admin password for Keycloak
    password:
      value:  c337f7ac2c155b97b45e734afe03ddd4caee778bcc5ef9b17d53d9df1d49ddd7        ## openssl rand -hex 32
  jupyterhub:
    ## Postgres password for the jupyterhub database
    postgresPassword:
      value:  eb6af918dfa924a92d6f7b5559d0a038b382c88c54761e7ffeec8309c8ca94ee        ## openssl rand -hex 32
  gateway:
    ## clientSecret: # use `uuidgen -r`
    clientSecret:  6b42848bfa6cfa475774e4d0fb249fb9c88b6d3d49d78ff9b341a70fa2e25ba2        ## Taken from gateway client in keycloak
    ## The client secret for authentication against gitlab
    gitlabClientSecret:   760d7021b2f1958cd3cae4d911283e84335c7b78256d61362e8de2c773291d53        ## Taken from renku-ui gitlab application secret
  renku:
    ## Domain name for the deployed instance of renku
   domain: *mainURL
  ## Note that the graph will not turned on by default until renku 0.4.0
  graph:
    dbEventLog:
      ## Postgres password to be used to access the Event Log db
      postgresPassword:
        value:  8730b019112986e9bebc7a87435a0e5a09124f0825836546f35c44604733de98        ## openssl rand -hex 32
    tokenRepository:
      ## Postgres password to be used to access the db storing access tokens
      postgresPassword:
        value:  5248990eeebd05a285fe0be3d3d29e877904f263488c737ed5f9481e5b6da0c6        ## openssl rand -hex 32
  useHTTPS: true

## Ingress configuration
## See: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  ## Hosts for the ingress
  ## Should include at least the value from `global.renku.domain`
  hosts:
  - *mainURL

  ## TLS setting for the ingress
  tls:
  - hosts:
    - *mainURL
    secretName: *ingressTLS

## Gitlab configuration
gitlab:
  ## Spawn a gitlab instance
  enabled: false

postgresql:
  postgresqlPassword:   a547938759db514ad3693adbc859dbf851b70303a8c82b2fab1e6df8c9991421        ## openssl rand -hex 32
#  persistence:
#    existingClaim: renku-postgresql

## Configuration for the UI service
ui:
  #  welcomePage:
  #    text: "## Some markdown text here!"
  gatewayUrl: *gatewayURL
  baseUrl: *baseURL
  gitlabUrl: *gitlabURL
  jupyterhubUrl: *jupyterhubURL
#  welcomePage:
#    text: |
#      Fill-in what will go in the welcome page of your Renkulab deployment

## Configuration for the notebooks service
notebooks:
  gitlab:
    ## specify the GitLab instance URL
    url: *gitlabURL
    registry:
      host: *registryName
  jupyterhub:
    ## Configure rbac
    rbac:
      enabled: true
    hub:
      ## Secret used for signing JH cookies. Must be explicitly set, otherwise all
      ## users are logged out whenever the hub pod is recreated!
      ## See https://zero-to-jupyterhub.readthedocs.io/en/latest/reference/reference.html#hub-cookiesecret
      cookieSecret:  6e347f79d805c53602f6c0c2413a7e82b0fb69a4fa66a9baea0baa719eab3e36        ## openssl rand -hex 32
      baseUrl: '/jupyterhub/'
      db:
        type: postgres
        url: postgres+psycopg2://jupyterhub@glnative-renku-postgresql:5432/jupyterhub
      services:
        ## Set the notebooks service API token
        notebooks:
          url: http://glnative-renku-notebooks
          apiToken:   04459c723ab25cb57a4258b10992ce1e5e8900c77b74aa72ec91adfb69a6a567        ## openssl rand -hex 32
        ## define the client ID and secret for the gateway
        gateway:
          oauth_client_id: &gwJHclientId gateway
          apiToken: &gwJHclientSecret  39ac038b3081454c772d0145d90f91f4cc508be7250c5b5e16c7ec62a2817e35        ## openssl rand -hex 32
          oauth_redirect_uri: *oauth_redirect_uri
      extraEnv:
        - name: GITLAB_URL
          value: *gitlabURL
        - name: DEBUG
          value: "1"
        - name: JUPYTERHUB_SPAWNER_CLASS
          value: spawners.RenkuKubeSpawner
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: renku-jupyterhub-postgres
              key: jupyterhub-postgres-password
    proxy:
      ## Must be set explicitly, generate using `openssl rand -hex 32`
      secretToken:   99095a3d900c8f3ae6a9ea3b1b1d011709b68c751cf72b9753da67911f363135        ## openssl rand -hex 32

    ## Configure Jupyterhub to use GitLab as OAuth2 provider
    auth:
      gitlab:
        clientId: *hubGitlabClientId
        clientSecret: *hubGitlabClientSecret
        callbackUrl: *jupyterhub_gitlab_callbackUrl
    ## Store encrypted auth state in the JH db (enabled by default).
    ## Key for encryption must be set explicitly!
    ## See https://zero-to-jupyterhub.readthedocs.io/en/latest/reference/reference.html?highlight=cryptokey#auth-state
      state:
        enabled: true
        cryptoKey:    153b4d3ceb411af117c4e1271be9f654fceb20b390f0ba496ef2a0cf59dfd41a        ## openssl rand -hex 32

## Configuration for the Gateway service
gateway:
  gitlabUrl: *gitlabURL
  gitlabClientId: *gitlabClientId
  gitlabClientSecret: *gitlabClientSecret
  secretKey: &gateway_secretKey   172f76530784053f1dfe7821232126749d719edb83983f1e5ff32aead9bf62d0        ## openssl rand -hex 32
  jupyterhub:
    clientId: *gwJHclientId
    clientSecret: *gwJHclientSecret
  graph:
    sparql:
      username: renku
      password: &sparql_password 953ae81b0da2310a3a6c319560ab46cd0641dacf7f72ca9ecb07a37df3f2a7bc        ## openssl rand -hex 32

## Configuration for renku-graph
graph:
  ## Configuration for Apache Jena
  jena:
    users:
      admin:
        password:   7040c655a48739965cff115059d0d80a51b9bef5d9a813b22d7da64b953c974f        ## openssl rand -hex 32
      renku:
        password: *sparql_password
#    persistence:
#      existingClaim: renku-jena
  gitlab:
    url: *gitlabURL

  tokenRepository:
    ## A secret for signing access tokens stored in the database
    ## Generated using: `openssl rand -hex 8|base64`
    tokenEncryption:
      secret:  NGJiZGU0ZTE5OWFkYzVjNQo=  ## openssl rand -hex 8|base64
  webhookService:
    ## A secret for signing request header tokens to be sent by GitLab with the Push Events
    ## Generated using: `openssl rand -hex 8|base64`
    hookToken:
      secret:  OTk2M2NjYWRlM2I4MGNmOQo=  ## openssl rand -hex 8|base64
core:
  image:
    repository: renku/renku-core
    tag: '0.14.1'
    pullPolicy: IfNotPresent
